extern crate futures;
extern crate tokio_uds;
extern crate tokio_core;
extern crate threadpool;
extern crate rustc_serialize;

use std::thread;
use std::path::Path;
use std::fs::remove_file;
use std::net::SocketAddr;
use futures::Future;
use futures::stream::Stream;
use tokio_core::io::{copy, Io};
use tokio_core::reactor::Core;
use tokio_core::net::TcpStream;

fn main() {
    let mut l = Core::new().unwrap();
    let handle = l.handle();
    let addr = "0.0.0.0:8080";
    let addr = addr.parse::<SocketAddr>().unwrap();
    let client = TcpStream::connect(&addr, &handle).unwrap();
    let _ = client.write(b"yo testing");
}

